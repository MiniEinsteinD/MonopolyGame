@startuml Monopoly Build Sequence Diagram

title Monopoly Build Sequence Diagram\nAuthor: Ethan Leir\nStudent #:101146422

hide footbox
skinparam monochrome true

actor User as User
participant "<u>mf:MonopolyFrame" as mf
participant "<u>bc:BuildController" as bc
participant "<u>m:Monopoly" as m
participant "<u>ap:Player" as ap
participant "<u>:Buildable" as b
participant "<u>p1:Property" as p1
participant "<u>sbtf:SetBuildableTilesFrame" as sbtf
participant "<u>sbtc1:SetBuildableTilesController" as sbtc

activate User
User -> mf: Select build button
activate mf

mf -> bc: actionPerformed(e: ActionEvent)
activate bc

bc -> sbtf ** : create
activate sbtf
sbtf -> m: getActivePlayer()
activate m
m --> sbtf: ap
deactivate m
sbtf -> ap: listOfValidBuildables()
activate ap
ap -> ap: getGroupsCanBeBuilt()
ap -> b: getGroup()
activate b
b --> ap
deactivate b
ap -> m: getNumBuildablesInGroup(group)
activate m
m --> ap
deactivate m
ap --> sbtf
deactivate ap
sbtf -> sbtc ** : create
deactivate sbtf

bc -> m : addView(sbtf)
activate m
m --> bc
deactivate m

bc --> mf
deactivate bc
mf --> User
deactivate mf

User -> sbtf: Select Property 1
activate sbtf
sbtf -> sbtc: actionPerformed(e: ActionEvent)
activate sbtc

sbtc -> m: removeView(sbtf)
activate m
m --> sbtc
deactivate m
sbtc -> m: build(p1)
activate m
m -> p1: buildHandler(new StringBuilder())
activate p1

p1 -> ap: getGroupsCanBeBuilt()
activate ap
ap -> m: getNumBuildablesInGroup(color)
m --> ap
ap --> p1
deactivate ap
p1 -> ap: getBuildables()
activate ap
ap --> p1
deactivate ap
p1 -> b: getGroup()
activate b
b --> p1
deactivate b
p1 -> b: getDevLevel()
activate b
b --> p1
deactivate b

p1 --> m
deactivate p1
m -> m: notifyViews()
m -> mf: handleMonopolyUpdate(new MonopolyEvent(this))
activate mf
mf --> m
deactivate mf
m --> sbtc
deactivate m

sbtc --> sbtf
deactivate sbtc

sbtf --> User
deactivate sbtf

@enduml